
.. _model_options_2d:

2D model options
================

This page lists all available options for the 2D model.

CommonModelOptions.\ **atmospheric_pressure** : FiredrakeScalarExpression
    Atmospheric pressure at free surface, in pascals

    Default:

    UFL scalar expression

CommonModelOptions.\ **cfl_2d** : PositiveFloat
    Factor to scale the 2d time step OBSOLETE

    Default:

    1.0

CommonModelOptions.\ **cfl_3d** : PositiveFloat
    Factor to scale the 2d time step OBSOLETE

    Default:

    1.0

CommonModelOptions.\ **check_volume_conservation_2d** : Bool
    Compute volume of the 2D mode at every export

            2D volume is defined as the integral of the water elevation field.
            Prints deviation from the initial volume to stdout.

    Default:

    False

CommonModelOptions.\ **coriolis_frequency** : FiredrakeScalarExpression
    2D Coriolis parameter

    Default:

    UFL scalar expression

CommonModelOptions.\ **element_family** : 'dg-dg'|'rt-dg'|'bdm-dg'|'dg-cg'
    Finite element family

            2D solver supports 'dg-dg', 'rt-dg', 'bdm-dg', or 'dg-cg' velocity-pressure pairs.
            3D solver supports 'dg-dg', 'rt-dg', or 'bdm-dg' velocity-pressure pairs.

    Default:

    'dg-dg'

CommonModelOptions.\ **export_diagnostics** : Bool
    Store diagnostic variables to disk in HDF5 format

    Default:

    True

CommonModelOptions.\ **fields_to_export** : List
    Fields to export in VTK format

    Default:

    ['elev_2d', 'uv_2d', 'uv_3d', 'w_3d']

CommonModelOptions.\ **fields_to_export_hdf5** : List
    Fields to export in HDF5 format

    Default:

    []

CommonModelOptions.\ **horizontal_diffusivity_scale** : FiredrakeConstantTraitlet
    Maximum horizontal diffusivity

            Used to compute the mesh Peclet number in
            the 2D tracer SUPG stabilization scheme.

    Default:

    Constant(1.0)

CommonModelOptions.\ **horizontal_velocity_scale** : FiredrakeConstantTraitlet
    Maximum horizontal velocity magnitude

            Used to compute max stable advection time step.

    Default:

    Constant(0.1)

CommonModelOptions.\ **horizontal_viscosity** : FiredrakeScalarExpression
    Horizontal viscosity

    Default:

    UFL scalar expression

CommonModelOptions.\ **horizontal_viscosity_scale** : FiredrakeConstantTraitlet
    Maximum horizontal viscosity

            Used to compute max stable diffusion time step.

    Default:

    Constant(1.0)

CommonModelOptions.\ **lax_friedrichs_tracer_scaling_factor** : FiredrakeConstantTraitlet
    Scaling factor for tracer Lax Friedrichs stability term.

    Default:

    Constant(1.0)

CommonModelOptions.\ **lax_friedrichs_velocity_scaling_factor** : FiredrakeConstantTraitlet
    Scaling factor for Lax Friedrichs stabilisation term in horizontal momentum advection.

    Default:

    Constant(1.0)

CommonModelOptions.\ **linear_drag_coefficient** : FiredrakeScalarExpression
    2D linear drag parameter :math:`L`

            Bottom stress is :math:`\tau_b/\rho_0 = -L \mathbf{u} H`

    Default:

    UFL scalar expression

CommonModelOptions.\ **log_output** : Bool
    Redirect all output to log file in output directory

    Default:

    True

CommonModelOptions.\ **manning_drag_coefficient** : FiredrakeScalarExpression
    Manning-Strickler 2D quadratic drag parameter :math:`\mu`

            Bottom stress is :math:`\tau_b/\rho_0 = -g \mu^2 |\mathbf{u}|\mathbf{u}/H^{1/3}`

    Default:

    UFL scalar expression

CommonModelOptions.\ **momentum_source_2d** : FiredrakeVectorExpression
    Source term for 2D momentum equation

    Default:

    UFL vector expression

CommonModelOptions.\ **nh_model_options** : Instance
    No description

    Default:

    <thetis.options.NonhydrostaticModelOptions object at 0x739c38102a50>

CommonModelOptions.\ **nikuradse_bed_roughness** : FiredrakeScalarExpression
    Nikuradse bed roughness length used to construct the 2D quadratic drag parameter :math:`C_D`.

            In sediment transport this term is usually three times the average sediment diameter size.

    Default:

    UFL scalar expression

CommonModelOptions.\ **no_exports** : Bool
    Do not store any outputs to disk

            Disables VTK and HDF5 field outputs. and HDF5 diagnostic outputs.
            Used in CI test suite.

    Default:

    False

CommonModelOptions.\ **norm_smoother** : FiredrakeConstantTraitlet
    Coefficient used to avoid non-differentiable functions in the continuous formulation of the velocity norm in
            the quadratic bottom drag term in the momentum equation. This replaces the velocity norm in the quadratic
            bottom drag term with :math:`\|u\| \approx \sqrt{\|u\|^2 + \alpha^2}`

    Default:

    Constant(0.0)

CommonModelOptions.\ **output_directory** : Unicode
    Directory where model output files are stored

    Default:

    'outputs'

CommonModelOptions.\ **polynomial_degree** : NonNegativeInteger
    Polynomial degree of elements

    Default:

    1

CommonModelOptions.\ **quadratic_drag_coefficient** : FiredrakeScalarExpression
    Dimensionless 2D quadratic drag parameter :math:`C_D`

            Bottom stress is :math:`\tau_b/\rho_0 = -C_D |\mathbf{u}|\mathbf{u}`

    Default:

    UFL scalar expression

CommonModelOptions.\ **simulation_end_date** : DatetimeTraitlet
    Simulation end date

    Default:

    None

CommonModelOptions.\ **simulation_end_time** : PositiveFloat
    Simulation duration in seconds

    Default:

    None

CommonModelOptions.\ **simulation_export_time** : PositiveFloat
    Export interval in seconds

            All fields in fields_to_export list will be stored to disk and
            diagnostics will be computed

    Default:

    100.0

CommonModelOptions.\ **simulation_initial_date** : DatetimeTraitlet
    Model initialization date. Corresponds to zero in simulation time.

    Default:

    None

CommonModelOptions.\ **sipg_factor** : FiredrakeScalarExpression
    Penalty parameter scaling factor for horizontal viscosity terms.

    Default:

    Constant(1.0)

CommonModelOptions.\ **sipg_factor_tracer** : FiredrakeScalarExpression
    Penalty parameter scaling factor for horizontal diffusivity terms.

    Default:

    Constant(1.0)

CommonModelOptions.\ **timestep** : PositiveFloat
    Time step

    Default:

    10.0

CommonModelOptions.\ **use_grad_depth_viscosity_term** : Bool
    Include :math:`\nabla H` term in the depth-averaged viscosity

            See :class:`.shallowwater_eq.HorizontalViscosityTerm` for details.

    Default:

    True

CommonModelOptions.\ **use_grad_div_viscosity_term** : Bool
    Include :math:`\nabla (\nu_h \nabla \cdot \bar{\textbf{u}})` term in the depth-averaged viscosity

            See :class:`.shallowwater_eq.HorizontalViscosityTerm` for details.

    Default:

    False

CommonModelOptions.\ **use_lax_friedrichs_tracer** : Bool
    Use Lax Friedrichs stabilisation in tracer advection.

    Default:

    False

CommonModelOptions.\ **use_lax_friedrichs_velocity** : Bool
    use Lax Friedrichs stabilisation in horizontal momentum advection.

    Default:

    True

CommonModelOptions.\ **use_limiter_for_tracers** : Bool
    Apply P1DG limiter for tracer fields

    Default:

    True

CommonModelOptions.\ **use_nonlinear_equations** : Bool
    Use nonlinear shallow water equations

    Default:

    True

CommonModelOptions.\ **verbose** : Int
    Verbosity level

    Default:

    0

CommonModelOptions.\ **volume_source_2d** : FiredrakeScalarExpression
    Source term for 2D continuity equation

    Default:

    UFL scalar expression

CommonModelOptions.\ **wind_stress** : FiredrakeVectorExpression
    Stress at free surface (2D vector function)

    Default:

    UFL vector expression

ModelOptions2d.\ **check_tracer_conservation** : Bool
    Compute total tracer mass at every export

            Prints deviation from the initial mass to stdout.

    Default:

    False

ModelOptions2d.\ **check_tracer_overshoot** : Bool
    Compute tracer overshoots at every export

            Prints overshoot values that exceed the initial range to stdout.

    Default:

    False

ModelOptions2d.\ **sediment_model_options** : Instance
    No description

    Default:

    <thetis.options.SedimentModelOptions object at 0x739c381021e0>

ModelOptions2d.\ **swe_timestepper_type** : 'SSPRK33'|'ForwardEuler'|'BackwardEuler'|'CrankNicolson'|'DIRK22'|'DIRK33'|'SteadyState'|'PressureProjectionPicard'|'SSPIMEX'
    Name of the time integrator

    Default:

    'CrankNicolson'

    Setting value implies configuration of sub-tree ModelOptions2d.swe_timestepper_options:

    'SSPRK33':

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'snes_type': 'ksponly', 'ksp_type': 'cg', 'pc_type': 'bjacobi', 'sub_ksp_type': 'preonly', 'sub_pc_type': 'ilu', 'mat_type': 'aij'}

    'ForwardEuler':

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'snes_type': 'ksponly', 'ksp_type': 'cg', 'pc_type': 'bjacobi', 'sub_ksp_type': 'preonly', 'sub_pc_type': 'ilu', 'mat_type': 'aij'}

    'BackwardEuler':

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'fieldsplit', 'pc_fieldsplit_type': 'multiplicative'}

    'CrankNicolson':

        ModelOptions2d.swe_timestepper_options.\ **implicitness_theta** : BoundedFloat
            implicitness parameter theta. Value 0.5 implies Crank-Nicolson scheme, 1.0 implies fully implicit formulation.

            Default:

            0.5

    'DIRK22':

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'fieldsplit', 'pc_fieldsplit_type': 'multiplicative'}

    'DIRK33':

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'fieldsplit', 'pc_fieldsplit_type': 'multiplicative'}

    'SteadyState':

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'preonly', 'pc_type': 'lu', 'pc_factor_mat_solver_type': 'mumps', 'mat_type': 'aij'}

    'PressureProjectionPicard':

        ModelOptions2d.swe_timestepper_options.\ **implicitness_theta** : BoundedFloat
            implicitness parameter theta. Value 0.5 implies Crank-Nicolson scheme, 1.0 implies fully implicit formulation.

            Default:

            0.5

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters_momentum** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'bjacobi', 'sub_ksp_type': 'preonly', 'sub_pc_type': 'sor'}

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters_pressure** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'preonly', 'mat_type': 'matfree', 'pc_type': 'fieldsplit', 'pc_fieldsplit_type': 'schur', 'pc_fieldsplit_schur_fact_type': 'full', 'fieldsplit_U_2d': {'ksp_type': 'gmres', 'pc_type': 'python', 'pc_python_type': 'firedrake.AssembledPC', 'assembled_ksp_type': 'preonly', 'assembled_pc_type': 'bjacobi', 'assembled_sub_pc_type': 'ilu'}, 'fieldsplit_H_2d': {'ksp_type': 'preonly', 'pc_type': 'python', 'pc_python_type': 'thetis.AssembledSchurPC', 'schur_ksp_type': 'gmres', 'schur_ksp_max_it': 100, 'schur_pc_type': 'gamg'}}

        ModelOptions2d.swe_timestepper_options.\ **use_semi_implicit_linearization** : Bool
            Use linearized semi-implicit time integration

            Default:

            True

    'SSPIMEX':

        ModelOptions2d.swe_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'fieldsplit', 'pc_fieldsplit_type': 'multiplicative'}


ModelOptions2d.\ **tracer_advective_velocity_factor** : FiredrakeScalarExpression
    Custom factor multiplied to the velocity variable in tracer advection equation.

            Used to account for mismatch between depth-averaged product of velocity with tracer
            and product of depth-averaged velocity with depth-averaged tracer

    Default:

    Constant(1.0)

ModelOptions2d.\ **tracer_element_family** : 'dg'|'cg'
    Finite element family for tracer transport

            2D solver supports 'dg' or 'cg'.

    Default:

    'dg'

ModelOptions2d.\ **tracer_only** : Bool
    Hold shallow water variables in initial state

            Advects tracer in the associated (constant) velocity field.

    Default:

    False

ModelOptions2d.\ **tracer_picard_iterations** : PositiveInteger
    Number of Picard iterations taken for tracer equations.

    Default:

    1

ModelOptions2d.\ **tracer_timestepper_type** : 'SSPRK33'|'ForwardEuler'|'BackwardEuler'|'CrankNicolson'|'DIRK22'|'DIRK33'|'SteadyState'
    Name of the tracer time integrator

    Default:

    'CrankNicolson'

    Setting value implies configuration of sub-tree ModelOptions2d.tracer_timestepper_options:

    'SSPRK33':

        ModelOptions2d.tracer_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'sor'}

    'ForwardEuler':

        ModelOptions2d.tracer_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'sor'}

    'BackwardEuler':

        ModelOptions2d.tracer_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'sor'}

    'CrankNicolson':

        ModelOptions2d.tracer_timestepper_options.\ **implicitness_theta** : BoundedFloat
            implicitness parameter theta. Value 0.5 implies Crank-Nicolson scheme, 1.0 implies fully implicit formulation.

            Default:

            0.5

    'DIRK22':

        ModelOptions2d.tracer_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'sor'}

    'DIRK33':

        ModelOptions2d.tracer_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'gmres', 'pc_type': 'sor'}

    'SteadyState':

        ModelOptions2d.tracer_timestepper_options.\ **solver_parameters** : PETScSolverParameters
            No description

            Default:

            {'ksp_type': 'preonly', 'pc_type': 'lu', 'pc_factor_mat_solver_type': 'mumps', 'mat_type': 'aij'}


ModelOptions2d.\ **use_automatic_wetting_and_drying_alpha** : Bool
    Toggle automatic computation of the alpha parameter used in wetting and drying schemes.

            By default, this parameter is set to 0.5.

            For problems whose bathymetry varies wildly in coastal regions, it is advisable to use the
            automatic wetting and drying parameter, rather than the default.

    Default:

    False

ModelOptions2d.\ **use_supg_tracer** : Bool
    Use SUPG stabilisation in tracer advection

    Default:

    False

ModelOptions2d.\ **use_tracer_conservative_form** : Bool
    Solve 2D tracer transport in the conservative form

    Default:

    False

ModelOptions2d.\ **use_wetting_and_drying** : Bool
    bool: Turn on wetting and drying

            Uses the wetting and drying scheme from Karna et al (2011).
            If ``True``, one should also set :attr:`wetting_and_drying_alpha` to control the bathymetry displacement.

    Default:

    False

ModelOptions2d.\ **wetting_and_drying_alpha** : FiredrakeScalarExpression
    Coefficient: Wetting and drying parameter :math:`\alpha`.

            Used in bathymetry displacement function that ensures positive water depths. Unit is meters.

    Default:

    Constant(0.5)

ModelOptions2d.\ **wetting_and_drying_alpha_max** : FiredrakeScalarExpression
    Maximum value to be taken by wetting and drying parameter :math:`\alpha`.

            Note this is only relevant if `use_automatic_wetting_and_drying_alpha` is set to ``True``.

    Default:

    Constant(2.0)

ModelOptions2d.\ **wetting_and_drying_alpha_min** : FiredrakeScalarExpression
    Minimum value to be taken by wetting and drying parameter :math:`\alpha`.

            Note this is only relevant if `use_automatic_wetting_and_drying_alpha` is set to ``True``.

    Default:

    UFL scalar expression
